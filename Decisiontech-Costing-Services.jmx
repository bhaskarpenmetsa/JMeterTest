<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">OAM_REMOTE_USER</stringProp>
            <stringProp name="Header.value">SNIITAPPDEV</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Oamcookie-Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;userName&quot;:&quot;MYPWB01&quot;,&#xd;
&quot;password&quot;:&quot;welcome1&quot;,&#xd;
&quot;successUrl&quot;:&quot;https://servicesunt2.intra.schneider.com/api/decisiontech-costing-costperdistance-service-server/info&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sbunt1.intra.schneider.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/restws/008/entserv/auth/resources/v1/security/oamcookies</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers"/>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="OAMAuthnCookie Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">OAMAuthnCookie</stringProp>
            <stringProp name="RegexExtractor.regex">OAMAuthnCookie_servicesunt2.intra.schneider.com:443=(.*?);&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">OAMAuthnCookie value not found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="C1-Cost-per-load-GetReq" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">servicesunt2.intra.schneider.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/decisiontech-costing-costperload-service-server/sayHello</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Cookie</stringProp>
                <stringProp name="Header.value">OAMAuthnCookie_servicesunt2.intra.schneider.com:443=${OAMAuthnCookie}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="69609650">Hello</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="C1-Cost-per-load-IM-PostReq" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[{&#xd;
    &quot;lineOfBusiness&quot;: &quot;IM&quot;,&#xd;
    &quot;currencyConversionDate&quot;: &quot;2019-05-01T03:08:05.655-05:00&quot;,&#xd;
    &quot;requestKey&quot;: &quot;1002037-100002-IM IME-IMRGNL-1556698085655&quot;,&#xd;
    &quot;costType&quot;: &quot;TCTCL&quot;,&#xd;
    &quot;executionType&quot;: &quot;IMRGNL&quot;,&#xd;
    &quot;capabilityType&quot;: &quot;IME&quot;,&#xd;
    &quot;required&quot;: true&#xd;
}, {&#xd;
    &quot;lineOfBusiness&quot;: &quot;IM&quot;,&#xd;
    &quot;currencyConversionDate&quot;: &quot;2019-05-01T03:08:05.661-05:00&quot;,&#xd;
    &quot;requestKey&quot;: &quot;1002037-100002-IM IMS-IMLCL-1556698085660&quot;,&#xd;
    &quot;costType&quot;: &quot;TCTCL&quot;,&#xd;
    &quot;executionType&quot;: &quot;IMLCL&quot;,&#xd;
    &quot;capabilityType&quot;: &quot;IMS&quot;,&#xd;
    &quot;required&quot;: true&#xd;
}]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">servicesunt2.intra.schneider.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/decisiontech-costing-costperload-service-server/cost</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Cookie</stringProp>
                <stringProp name="Header.value">OAMAuthnCookie_servicesunt2.intra.schneider.com:443=${OAMAuthnCookie}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2126">C1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="C2-Cost-per-Distance-GetReq" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">servicesunt2.intra.schneider.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/decisiontech-costing-costperdistance-service-server/sayHello</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Cookie</stringProp>
                <stringProp name="Header.value">OAMAuthnCookie_servicesunt2.intra.schneider.com:443=${OAMAuthnCookie}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="69609650">Hello</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="C2-Cost-per-Distance-VANTL-PostReq" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[{&#xd;
        &quot;lineOfBusiness&quot;: &quot;VANTL&quot;,&#xd;
        &quot;currencyConversionDate&quot;: &quot;2019-04-08T22:40:19.209-05:00&quot;,&#xd;
        &quot;distanceUOM&quot;: &quot;MI&quot;,&#xd;
        &quot;requestKey&quot;: &quot;3000067809-VANTL VTLSOLO-VTLSOLO-1554781219208&quot;,&#xd;
        &quot;executionType&quot;: &quot;VTLSOLO&quot;,&#xd;
        &quot;costingType&quot;: &quot;CTBRN&quot;,&#xd;
        &quot;capabilityType&quot;: &quot;VTLSOLO&quot;,&#xd;
        &quot;processType&quot;: &quot;OPT&quot;,&#xd;
        &quot;standardNonMexDistance&quot;: {&#xd;
            &quot;unitOfDistance&quot;: &quot;MI&quot;,&#xd;
            &quot;amount&quot;: 112&#xd;
        },&#xd;
        &quot;required&quot;: true,&#xd;
        &quot;nonMexicoTankWashDistance&quot;: {&#xd;
            &quot;unitOfDistance&quot;: &quot;MI&quot;,&#xd;
            &quot;amount&quot;: 50&#xd;
        }&#xd;
    },&#xd;
    {&#xd;
        &quot;lineOfBusiness&quot;: &quot;VANTL&quot;,&#xd;
        &quot;currencyConversionDate&quot;: &quot;2019-04-08T22:40:19.22-05:00&quot;,&#xd;
        &quot;distanceUOM&quot;: &quot;MI&quot;,&#xd;
        &quot;requestKey&quot;: &quot;3000067809-VANTL VTLTEAM-VTLTEAM-1554781219219&quot;,&#xd;
        &quot;executionType&quot;: &quot;VTLTEAM&quot;,&#xd;
        &quot;costingType&quot;: &quot;CTBRN&quot;,&#xd;
        &quot;capabilityType&quot;: &quot;VTLTEAM&quot;,&#xd;
        &quot;processType&quot;: &quot;OPT&quot;,&#xd;
        &quot;standardNonMexDistance&quot;: {&#xd;
            &quot;unitOfDistance&quot;: &quot;MI&quot;,&#xd;
            &quot;amount&quot;: 112&#xd;
        },&#xd;
        &quot;required&quot;: true,&#xd;
        &quot;nonMexicoTankWashDistance&quot;: {&#xd;
            &quot;unitOfDistance&quot;: &quot;MI&quot;,&#xd;
            &quot;amount&quot;: 60&#xd;
        }&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">servicesunt2.intra.schneider.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/decisiontech-costing-costperdistance-service-server/cost</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Cookie</stringProp>
                <stringProp name="Header.value">OAMAuthnCookie_servicesunt2.intra.schneider.com:443=${OAMAuthnCookie}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2127">C2</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="C3-Accessorial-Cost-GetReq" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">servicesunt2.intra.schneider.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/decisiontech-costing-accessorialcost-service-server/sayHello</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Cookie</stringProp>
                <stringProp name="Header.value">OAMAuthnCookie_servicesunt2.intra.schneider.com:443=${OAMAuthnCookie}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="69609650">Hello</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="C3-Accessorial-Cost-IM-PostReq" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[{&#xd;
    &quot;currencyConversionDate&quot;: &quot;2019-03-26T02:02:36.888-05:00&quot;,&#xd;
    &quot;servicesList&quot;: [{&#xd;
        &quot;code&quot;: &quot;BAS&quot;,&#xd;
        &quot;stopSequenceNumber&quot;: 1,&#xd;
        &quot;stopId&quot;: null,&#xd;
        &quot;lineItemId&quot;: &quot;1-33312121980&quot;,&#xd;
        &quot;lineItemStatus&quot;: &quot;Open&quot;,&#xd;
        &quot;shipmentLevelIndicator&quot;: null,&#xd;
        &quot;stopLevelIndicator&quot;: null,&#xd;
        &quot;quantityValue&quot;: &quot;0.0&quot;,&#xd;
        &quot;quantityUnitOfMeasure&quot;: &quot;NONE&quot;,&#xd;
        &quot;freightClass&quot;: null,&#xd;
        &quot;suggestedAmount&quot;: null,&#xd;
        &quot;contractedAmount&quot;: null,&#xd;
        &quot;standardSellAmount&quot;: null,&#xd;
        &quot;standardBuyAmount&quot;: null,&#xd;
        &quot;adjustedAmount&quot;: null,&#xd;
        &quot;allowNegotiationIndicator&quot;: null,&#xd;
        &quot;createdServiceIndicator&quot;: false,&#xd;
        &quot;includeInLineHaulIndicator&quot;: null,&#xd;
        &quot;varianceAmtApplied&quot;: null,&#xd;
        &quot;varianceAmtBaseUnitCode&quot;: null,&#xd;
        &quot;varaianceAmtBaseValue&quot;: null,&#xd;
        &quot;pricingMethod&quot;: null,&#xd;
        &quot;snibParentLineItemId&quot;: null,&#xd;
        &quot;geoDescription&quot;: null,&#xd;
        &quot;liablePartyID&quot;: &quot;8891&quot;,&#xd;
        &quot;invoiceTo&quot;: &quot;2129318&quot;,&#xd;
        &quot;blindshipmentCode&quot;: null,&#xd;
        &quot;currency&quot;: &quot;USD&quot;,&#xd;
        &quot;aggrmentId&quot;: &quot;null&quot;,&#xd;
        &quot;rateOnDateCode&quot;: null,&#xd;
        &quot;rateAuditFlag&quot;: null,&#xd;
        &quot;orderErrorFlag&quot;: null,&#xd;
        &quot;rateAuditMessages&quot;: null,&#xd;
        &quot;rateErroMessages&quot;: null,&#xd;
        &quot;originIndexCode&quot;: null,&#xd;
        &quot;destinationIndexCode&quot;: null,&#xd;
        &quot;dealData&quot;: null&#xd;
    }],&#xd;
    &quot;orderId&quot;: &quot;3000067764&quot;,&#xd;
    &quot;requestKey&quot;: &quot;3000067764-VANTL VTLSOLO-VTLCNSOLO-1553583756884&quot;,&#xd;
    &quot;executionType&quot;: &quot;VTLCNSOLO&quot;,&#xd;
    &quot;transportationMode&quot;: null,&#xd;
    &quot;commodities&quot;: [],&#xd;
    &quot;equipment&quot;: {&#xd;
        &quot;length&quot;: null,&#xd;
        &quot;width&quot;: null,&#xd;
        &quot;height&quot;: null&#xd;
    },&#xd;
    &quot;userId&quot;: &quot;D23667&quot;,&#xd;
    &quot;required&quot;: false,&#xd;
    &quot;grossWeight&quot;: {&#xd;
        &quot;amount&quot;: 1500,&#xd;
        &quot;unitOfWeight&quot;: &quot;LB&quot;&#xd;
    },&#xd;
    &quot;callRating&quot;: false,&#xd;
    &quot;organization&quot;: &quot;SNI&quot;,&#xd;
    &quot;lineOfBussiness&quot;: &quot;VANTL&quot;,&#xd;
    &quot;rateOnDateCode&quot;: null,&#xd;
    &quot;directCost&quot;: 0.0,&#xd;
    &quot;capabilityType&quot;: &quot;VTLSOLO&quot;,&#xd;
    &quot;processType&quot;: &quot;OA&quot;,&#xd;
    &quot;stops&quot;: [{&#xd;
        &quot;stopSeqNumber&quot;: 1,&#xd;
        &quot;stopId&quot;: &quot;1-33312123232&quot;,&#xd;
        &quot;location&quot;: {&#xd;
            &quot;pricingRegion&quot;: &quot;GL14&quot;,&#xd;
            &quot;latitude&quot;: 41.28802,&#xd;
            &quot;longitude&quot;: -81.34247,&#xd;
            &quot;city&quot;: &quot;AURORA&quot;,&#xd;
            &quot;countryCode&quot;: &quot;USA&quot;,&#xd;
            &quot;countyName&quot;: &quot; &quot;,&#xd;
            &quot;geoId&quot;: &quot;3444A0AI8&quot;,&#xd;
            &quot;locationId&quot;: &quot;79604&quot;,&#xd;
            &quot;postalCode&quot;: &quot;44202&quot;,&#xd;
            &quot;beginPostalCode&quot;: null,&#xd;
            &quot;postalMax&quot;: null,&#xd;
            &quot;indexTypeCode&quot;: null,&#xd;
            &quot;stateCode&quot;: &quot;OH&quot;,&#xd;
            &quot;buildingBlock&quot;: &quot;USA442&quot;,&#xd;
            &quot;defaultPointId&quot;: &quot;344423000&quot;,&#xd;
            &quot;areaCode&quot;: &quot;NOHV&quot;&#xd;
        },&#xd;
        &quot;stopActivityType&quot;: null,&#xd;
        &quot;stopActivityValue&quot;: &quot;P&quot;,&#xd;
        &quot;loadingUnloadingType&quot;: &quot;DAHK&quot;,&#xd;
        &quot;earlyAppointment&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-13T08:00:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        },&#xd;
        &quot;lateAppointment&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-13T06:30:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        },&#xd;
        &quot;earlyRequested&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-13T06:30:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        },&#xd;
        &quot;lateRequested&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-13T07:30:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        },&#xd;
        &quot;earlyActual&quot;: null,&#xd;
        &quot;lateActual&quot;: null,&#xd;
        &quot;items&quot;: [{&#xd;
            &quot;attributes&quot;: [{&#xd;
                &quot;name&quot;: &quot;At what Temperature will your Commodity Freeze?&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Bulk No Haul Flag&quot;,&#xd;
                &quot;value&quot;: &quot;Y&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Bulk Restriction Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Commodity Permit&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Dedicated No Haul Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Dedicated Restriction Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Does your Commodity Require to be Freeze Protected?&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Does your commodity require to be maintained within a Temperature Range?&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Entry Level Driver Restriction Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;FDA Prenote Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Freeze Protect Potential Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Hazmat Potential Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Height&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;High Value Breakpoint&quot;,&#xd;
                &quot;value&quot;: &quot;100000&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;High Value Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;High Value Potential Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;High Value STM Breakpoint&quot;,&#xd;
                &quot;value&quot;: &quot;300000&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;IIT Indicator&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Intermodal No Haul Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Intermodal Restriction Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;LOB Dedicated&quot;,&#xd;
                &quot;value&quot;: &quot;Dedicated&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;LOB Intermodal&quot;,&#xd;
                &quot;value&quot;: &quot;Intermodal&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;LOB STM&quot;,&#xd;
                &quot;value&quot;: &quot;Transportation Management(STM)&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;LOB Van Truckload&quot;,&#xd;
                &quot;value&quot;: &quot;Van Truckload&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;LTL No Haul Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;LTL Restriction Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Length&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Mode LTL&quot;,&#xd;
                &quot;value&quot;: &quot;Less-Than-Truckload&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;NMFC Article ID&quot;,&#xd;
                &quot;value&quot;: &quot;48920&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;NMFC Notes&quot;,&#xd;
                &quot;value&quot;: &quot;Specific information from tenderer required to properly classify for LTL Shipments.&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;No Haul Message&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Packaging Unit Quantity&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;STCC #&quot;,&#xd;
                &quot;value&quot;: &quot;2299911&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;STM No Haul Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;STM Restriction Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Security Monitoring Indicator&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Temperature Control Potential Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Theftable Risk Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;UNSPSC #&quot;,&#xd;
                &quot;value&quot;: &quot;52121508&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Van Truckload No Haul Flg&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Van Truckload Restriction Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Weight&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;What is the High End of the Temperature Range?&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;What is the Low end of the Temperature Range?&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;What is the Packaging Unit Quantity&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;What is the Packaging Unit Type?&quot;,&#xd;
                &quot;value&quot;: &quot;Bags&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;What is the Shipping Device Quantity?&quot;,&#xd;
                &quot;value&quot;: &quot;250&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;What is the Shipping Device?&quot;,&#xd;
                &quot;value&quot;: &quot;None&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;What is the estimated value of the Load?&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Width&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Will the Load be Placarded?&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Will the Load contain Hazmat Material?&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }],&#xd;
            &quot;itemType&quot;: &quot;Commodity&quot;,&#xd;
            &quot;itemCode&quot;: &quot;Blankets&quot;&#xd;
        }],&#xd;
        &quot;actions&quot;: [{&#xd;
            &quot;actionCode&quot;: &quot;Pick Up Loaded Trailer&quot;,&#xd;
            &quot;description&quot;: null&#xd;
        }],&#xd;
        &quot;earlySolution&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-13T04:00:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        },&#xd;
        &quot;lateSolution&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-13T09:59:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        }&#xd;
    }, {&#xd;
        &quot;stopSeqNumber&quot;: 2,&#xd;
        &quot;stopId&quot;: &quot;1-33312123236&quot;,&#xd;
        &quot;location&quot;: {&#xd;
            &quot;pricingRegion&quot;: &quot;ON02&quot;,&#xd;
            &quot;latitude&quot;: 42.90621,&#xd;
            &quot;longitude&quot;: -78.90081,&#xd;
            &quot;city&quot;: &quot;FORT ERIE&quot;,&#xd;
            &quot;countryCode&quot;: &quot;CAN&quot;,&#xd;
            &quot;countyName&quot;: &quot;NIAGARA RM&quot;,&#xd;
            &quot;geoId&quot;: &quot;0427A1FX7&quot;,&#xd;
            &quot;locationId&quot;: &quot;2170424&quot;,&#xd;
            &quot;postalCode&quot;: &quot;L2A0A7&quot;,&#xd;
            &quot;beginPostalCode&quot;: null,&#xd;
            &quot;postalMax&quot;: null,&#xd;
            &quot;indexTypeCode&quot;: null,&#xd;
            &quot;stateCode&quot;: &quot;ON&quot;,&#xd;
            &quot;buildingBlock&quot;: &quot;CAN0427&quot;,&#xd;
            &quot;defaultPointId&quot;: &quot;042702000&quot;,&#xd;
            &quot;areaCode&quot;: &quot;ON&quot;&#xd;
        },&#xd;
        &quot;stopActivityType&quot;: null,&#xd;
        &quot;stopActivityValue&quot;: &quot;BX&quot;,&#xd;
        &quot;loadingUnloadingType&quot;: null,&#xd;
        &quot;earlyAppointment&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-13T22:30:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        },&#xd;
        &quot;lateAppointment&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-13T21:30:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        },&#xd;
        &quot;earlyRequested&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-13T21:30:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        },&#xd;
        &quot;lateRequested&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-13T22:30:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        },&#xd;
        &quot;earlyActual&quot;: null,&#xd;
        &quot;lateActual&quot;: null,&#xd;
        &quot;items&quot;: null,&#xd;
        &quot;actions&quot;: [{&#xd;
            &quot;actionCode&quot;: null,&#xd;
            &quot;description&quot;: null&#xd;
        }],&#xd;
        &quot;earlySolution&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-13T14:54:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        },&#xd;
        &quot;lateSolution&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-13T20:53:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        }&#xd;
    }, {&#xd;
        &quot;stopSeqNumber&quot;: 3,&#xd;
        &quot;stopId&quot;: &quot;1-33312123234&quot;,&#xd;
        &quot;location&quot;: {&#xd;
            &quot;pricingRegion&quot;: &quot;ON02&quot;,&#xd;
            &quot;latitude&quot;: 43.63278,&#xd;
            &quot;longitude&quot;: -79.63078,&#xd;
            &quot;city&quot;: &quot;MISSISSAUGA&quot;,&#xd;
            &quot;countryCode&quot;: &quot;CAN&quot;,&#xd;
            &quot;countyName&quot;: null,&#xd;
            &quot;geoId&quot;: &quot;0421A2C88&quot;,&#xd;
            &quot;locationId&quot;: &quot;110527&quot;,&#xd;
            &quot;postalCode&quot;: &quot;L4W1G5&quot;,&#xd;
            &quot;beginPostalCode&quot;: null,&#xd;
            &quot;postalMax&quot;: null,&#xd;
            &quot;indexTypeCode&quot;: null,&#xd;
            &quot;stateCode&quot;: &quot;ON&quot;,&#xd;
            &quot;buildingBlock&quot;: &quot;CAN0421&quot;,&#xd;
            &quot;defaultPointId&quot;: &quot;042101000&quot;,&#xd;
            &quot;areaCode&quot;: &quot;ON&quot;&#xd;
        },&#xd;
        &quot;stopActivityType&quot;: null,&#xd;
        &quot;stopActivityValue&quot;: &quot;D&quot;,&#xd;
        &quot;loadingUnloadingType&quot;: &quot;DAHK&quot;,&#xd;
        &quot;earlyAppointment&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-15T03:30:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        },&#xd;
        &quot;lateAppointment&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-15T00:30:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        },&#xd;
        &quot;earlyRequested&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-15T00:30:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        },&#xd;
        &quot;lateRequested&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-15T03:30:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        },&#xd;
        &quot;earlyActual&quot;: null,&#xd;
        &quot;lateActual&quot;: null,&#xd;
        &quot;items&quot;: [{&#xd;
            &quot;attributes&quot;: [{&#xd;
                &quot;name&quot;: &quot;At what Temperature will your Commodity Freeze?&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Bulk No Haul Flag&quot;,&#xd;
                &quot;value&quot;: &quot;Y&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Bulk Restriction Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Commodity Permit&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Dedicated No Haul Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Dedicated Restriction Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Does your Commodity Require to be Freeze Protected?&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Does your commodity require to be maintained within a Temperature Range?&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Entry Level Driver Restriction Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;FDA Prenote Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Freeze Protect Potential Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Hazmat Potential Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Height&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;High Value Breakpoint&quot;,&#xd;
                &quot;value&quot;: &quot;100000&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;High Value Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;High Value Potential Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;High Value STM Breakpoint&quot;,&#xd;
                &quot;value&quot;: &quot;300000&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;IIT Indicator&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Intermodal No Haul Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Intermodal Restriction Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;LOB Dedicated&quot;,&#xd;
                &quot;value&quot;: &quot;Dedicated&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;LOB Intermodal&quot;,&#xd;
                &quot;value&quot;: &quot;Intermodal&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;LOB STM&quot;,&#xd;
                &quot;value&quot;: &quot;Transportation Management(STM)&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;LOB Van Truckload&quot;,&#xd;
                &quot;value&quot;: &quot;Van Truckload&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;LTL No Haul Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;LTL Restriction Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Length&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Mode LTL&quot;,&#xd;
                &quot;value&quot;: &quot;Less-Than-Truckload&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;NMFC Article ID&quot;,&#xd;
                &quot;value&quot;: &quot;48920&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;NMFC Notes&quot;,&#xd;
                &quot;value&quot;: &quot;Specific information from tenderer required to properly classify for LTL Shipments.&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;No Haul Message&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Packaging Unit Quantity&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;STCC #&quot;,&#xd;
                &quot;value&quot;: &quot;2299911&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;STM No Haul Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;STM Restriction Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Security Monitoring Indicator&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Temperature Control Potential Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Theftable Risk Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;UNSPSC #&quot;,&#xd;
                &quot;value&quot;: &quot;52121508&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Van Truckload No Haul Flg&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Van Truckload Restriction Flag&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Weight&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;What is the High End of the Temperature Range?&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;What is the Low end of the Temperature Range?&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;What is the Packaging Unit Quantity&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;What is the Packaging Unit Type?&quot;,&#xd;
                &quot;value&quot;: &quot;Bags&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;What is the Shipping Device Quantity?&quot;,&#xd;
                &quot;value&quot;: &quot;250&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;What is the Shipping Device?&quot;,&#xd;
                &quot;value&quot;: &quot;None&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;What is the estimated value of the Load?&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Width&quot;,&#xd;
                &quot;value&quot;: &quot;0&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Will the Load be Placarded?&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }, {&#xd;
                &quot;name&quot;: &quot;Will the Load contain Hazmat Material?&quot;,&#xd;
                &quot;value&quot;: &quot;N&quot;,&#xd;
                &quot;enterpriseValue&quot;: null&#xd;
            }],&#xd;
            &quot;itemType&quot;: &quot;Commodity&quot;,&#xd;
            &quot;itemCode&quot;: &quot;Blankets&quot;&#xd;
        }],&#xd;
        &quot;actions&quot;: [{&#xd;
            &quot;actionCode&quot;: &quot;Drop Loaded Trailer&quot;,&#xd;
            &quot;description&quot;: null&#xd;
        }],&#xd;
        &quot;earlySolution&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-13T16:35:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        },&#xd;
        &quot;lateSolution&quot;: {&#xd;
            &quot;dateTime&quot;: &quot;2019-03-13T22:34:00.000+0000&quot;,&#xd;
            &quot;timezone&quot;: &quot;US/Eastern&quot;&#xd;
        }&#xd;
    }],&#xd;
    &quot;highestFreightClass&quot;: null&#xd;
}]&#xd;
Path Param	 &#xd;
Success Response	&#xd;
200 OK&#xd;
&#xd;
 Collapse source&#xd;
[&#xd;
    {&#xd;
        &quot;code&quot;: &quot;C3&quot;,&#xd;
        &quot;description&quot;: &quot;AccessorialCost&quot;,&#xd;
        &quot;pricingValidationResult&quot;: null,&#xd;
        &quot;amount&quot;: {&#xd;
            &quot;currencyCode&quot;: &quot;USD&quot;,&#xd;
            &quot;currencyConversionDate&quot;: 1554731747.97,&#xd;
            &quot;value&quot;: 50&#xd;
        },&#xd;
        &quot;responseKey&quot;: &quot;3000067764-VANTL VTLSOLO-VTLCNSOLO-1553583756884&quot;,&#xd;
        &quot;serviceList&quot;: [&#xd;
            {&#xd;
                &quot;code&quot;: &quot;BAS&quot;,&#xd;
                &quot;stopSequenceNumber&quot;: 1,&#xd;
                &quot;stopId&quot;: null,&#xd;
                &quot;lineItemId&quot;: &quot;1-33312121980&quot;,&#xd;
                &quot;lineItemStatus&quot;: &quot;Open&quot;,&#xd;
                &quot;shipmentLevelIndicator&quot;: null,&#xd;
                &quot;stopLevelIndicator&quot;: null,&#xd;
                &quot;quantityValue&quot;: &quot;0.0&quot;,&#xd;
                &quot;quantityUnitOfMeasure&quot;: &quot;NONE&quot;,&#xd;
                &quot;freightClass&quot;: null,&#xd;
                &quot;suggestedAmount&quot;: null,&#xd;
                &quot;contractedAmount&quot;: null,&#xd;
                &quot;standardSellAmount&quot;: null,&#xd;
                &quot;standardBuyAmount&quot;: {&#xd;
                    &quot;ratedIndicator&quot;: null,&#xd;
                    &quot;rateID&quot;: null,&#xd;
                    &quot;amount&quot;: {&#xd;
                        &quot;currencyCode&quot;: &quot;USD&quot;,&#xd;
                        &quot;currencyConversionDate&quot;: null,&#xd;
                        &quot;value&quot;: 0&#xd;
                    },&#xd;
                    &quot;bandDetailsIndicator&quot;: null,&#xd;
                    &quot;bandDetails&quot;: null,&#xd;
                    &quot;rateQty&quot;: null,&#xd;
                    &quot;rateQtyUnitCode&quot;: null,&#xd;
                    &quot;baseUnitCode&quot;: null,&#xd;
                    &quot;baseValue&quot;: 0,&#xd;
                    &quot;effectiveDate&quot;: null,&#xd;
                    &quot;dataId&quot;: 0,&#xd;
                    &quot;qualID&quot;: 0,&#xd;
                    &quot;qualDesc&quot;: null&#xd;
                },&#xd;
                &quot;adjustedAmount&quot;: null,&#xd;
                &quot;allowNegotiationIndicator&quot;: null,&#xd;
                &quot;createdServiceIndicator&quot;: false,&#xd;
                &quot;includeInLineHaulIndicator&quot;: null,&#xd;
                &quot;varianceAmtApplied&quot;: null,&#xd;
                &quot;varianceAmtBaseUnitCode&quot;: null,&#xd;
                &quot;varaianceAmtBaseValue&quot;: null,&#xd;
                &quot;pricingMethod&quot;: null,&#xd;
                &quot;snibParentLineItemId&quot;: null,&#xd;
                &quot;geoDescription&quot;: null,&#xd;
                &quot;liablePartyID&quot;: &quot;8891&quot;,&#xd;
                &quot;invoiceTo&quot;: &quot;2129318&quot;,&#xd;
                &quot;blindshipmentCode&quot;: null,&#xd;
                &quot;currency&quot;: &quot;USD&quot;,&#xd;
                &quot;aggrmentId&quot;: &quot;null&quot;,&#xd;
                &quot;rateOnDateCode&quot;: null,&#xd;
                &quot;rateAuditFlag&quot;: null,&#xd;
                &quot;orderErrorFlag&quot;: null,&#xd;
                &quot;rateAuditMessages&quot;: null,&#xd;
                &quot;rateErroMessages&quot;: null,&#xd;
                &quot;originIndexCode&quot;: null,&#xd;
                &quot;destinationIndexCode&quot;: null,&#xd;
                &quot;dealData&quot;: null&#xd;
            },&#xd;
            {&#xd;
                &quot;code&quot;: &quot;CBC&quot;,&#xd;
                &quot;stopSequenceNumber&quot;: 0,&#xd;
                &quot;stopId&quot;: null,&#xd;
                &quot;lineItemId&quot;: null,&#xd;
                &quot;lineItemStatus&quot;: null,&#xd;
                &quot;shipmentLevelIndicator&quot;: null,&#xd;
                &quot;stopLevelIndicator&quot;: null,&#xd;
                &quot;quantityValue&quot;: &quot;0.0&quot;,&#xd;
                &quot;quantityUnitOfMeasure&quot;: &quot;UNIT&quot;,&#xd;
                &quot;freightClass&quot;: null,&#xd;
                &quot;suggestedAmount&quot;: null,&#xd;
                &quot;contractedAmount&quot;: null,&#xd;
                &quot;standardSellAmount&quot;: null,&#xd;
                &quot;standardBuyAmount&quot;: {&#xd;
                    &quot;ratedIndicator&quot;: true,&#xd;
                    &quot;rateID&quot;: &quot;916362902&quot;,&#xd;
                    &quot;amount&quot;: {&#xd;
                        &quot;currencyCode&quot;: &quot;USD&quot;,&#xd;
                        &quot;currencyConversionDate&quot;: null,&#xd;
                        &quot;value&quot;: 50&#xd;
                    },&#xd;
                    &quot;bandDetailsIndicator&quot;: false,&#xd;
                    &quot;bandDetails&quot;: null,&#xd;
                    &quot;rateQty&quot;: 0,&#xd;
                    &quot;rateQtyUnitCode&quot;: &quot;NONE&quot;,&#xd;
                    &quot;baseUnitCode&quot;: &quot;FLT&quot;,&#xd;
                    &quot;baseValue&quot;: 50,&#xd;
                    &quot;effectiveDate&quot;: 1228111200000,&#xd;
                    &quot;dataId&quot;: 916362902,&#xd;
                    &quot;qualID&quot;: 0,&#xd;
                    &quot;qualDesc&quot;: null&#xd;
                },&#xd;
                &quot;adjustedAmount&quot;: null,&#xd;
                &quot;allowNegotiationIndicator&quot;: null,&#xd;
                &quot;createdServiceIndicator&quot;: true,&#xd;
                &quot;includeInLineHaulIndicator&quot;: null,&#xd;
                &quot;varianceAmtApplied&quot;: null,&#xd;
                &quot;varianceAmtBaseUnitCode&quot;: null,&#xd;
                &quot;varaianceAmtBaseValue&quot;: null,&#xd;
                &quot;pricingMethod&quot;: null,&#xd;
                &quot;snibParentLineItemId&quot;: null,&#xd;
                &quot;geoDescription&quot;: &quot;CTRY-NONE-CTRY&quot;,&#xd;
                &quot;liablePartyID&quot;: null,&#xd;
                &quot;invoiceTo&quot;: null,&#xd;
                &quot;blindshipmentCode&quot;: null,&#xd;
                &quot;currency&quot;: null,&#xd;
                &quot;aggrmentId&quot;: null,&#xd;
                &quot;rateOnDateCode&quot;: null,&#xd;
                &quot;rateAuditFlag&quot;: null,&#xd;
                &quot;orderErrorFlag&quot;: null,&#xd;
                &quot;rateAuditMessages&quot;: null,&#xd;
                &quot;rateErroMessages&quot;: null,&#xd;
                &quot;originIndexCode&quot;: &quot;CTRY&quot;,&#xd;
                &quot;destinationIndexCode&quot;: &quot;CTRY&quot;,&#xd;
                &quot;dealData&quot;: null&#xd;
            }&#xd;
        ],&#xd;
        &quot;totalCost&quot;: 0&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">servicesunt2.intra.schneider.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/decisiontech-costing-accessorialcost-service-server/cost</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Cookie</stringProp>
                <stringProp name="Header.value">OAMAuthnCookie_servicesunt2.intra.schneider.com:443=${OAMAuthnCookie}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2128">C3</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
